--==============================================================================
--脚本意图：4x8球阵和框阵结合的造型设计
--版本 1.0
--日期 2015-2-13
--作者 吴飞林
--注意运行此脚本前，必须执行4x8球阵建模脚本并打开框阵模型文件
--==============================================================================

--==============================================================================
--为放样赋予变量名称
num = 4
LineArray = #($Loft001, $Loft002, $Loft003, $Loft004)

row = 2*row - 1
column = 2*column - 1

-------------------------------球阵造型函数-------------------------------------
--==============================================================================
--创建Z轴位置矩阵
--参数：pos    - 指定Z轴位置值
--参数：hold   - 保持时间
--==============================================================================
fn horizSpherePos pos frame:FrameTime row:row col:column =
(
	at time frame (
		for i = 1 to row by 2 do
		(
			for j = 1 to col by 2 do
			(
				BallArray[i][j].pos.z = pos
			)
		)
	)
)

--==============================================================================
--Z轴随机位置矩阵
--参数：rmin,rmax - 指定Z轴随机位置下限和上限
--==============================================================================
fn randomSpherePos rmin rmax frame:FrameTime row:row col:column =
(
	at time frame (
		for i = 1 to row by 2 do
		(
			for j = 1 to col by 2 do
			(
				BallArray[i][j].pos.z = random rmin rmax
			)
		)
	)
)

-------------------------------框阵造型函数-------------------------------------
--==============================================================================
--同步达到指定位置
--参数：pos - 指定Z轴位置值
--参数：delay  - 保持pod位置时间
--==============================================================================
fn horizLinePos pos frame:FrameTime n:num =
(
	at time frame (
		for i = 1 to n do LineArray[i].pos.z = pos
	)

)

--==============================================================================
--随机位置分布
--参数：rmin, rmax - 随机位置下限和上限
--==============================================================================
fn randomLinePos rmin rmax frame:FrameTime n:num =
(
	for i = 1 to n do
	(
		at time frame (
			pos = random rmin rmax
			LineArray[i].pos.z = pos
		)
	)
)

--==============================================================================
--框阵奇偶分离
--参数：pos - 指定Z轴位置值
--==============================================================================
fn horizLineDisPos pos1 pos2 frame:FrameTime n:num =
(
	for i = 1 to 3 by 2 do
	(
		at time frame (
			LineArray[i].pos.z = pos1
		)
	)
	
	for i = 2 to n by 2 do
	(
		at time frame (
			LineArray[i].pos.z = pos2
		)
	)

)

--==============================================================================
--正向线性锥形
--参数1 a - 锥形斜率
--参数2 hor  - 中心高
--==============================================================================
fn linearForwardPos a hor frame:FrameTime n:num =
(
	for i = 1 to n do
	(
		at time frame (
			pos = a*(n-i) + hor
			LineArray[i].pos.z = pos
		)
	)
)

--==============================================================================
--反向线性线性锥形
--参数1 a - 锥形斜率
--参数2 hor  - 中心高
--==============================================================================
fn linearBackwardPos a hor frame:FrameTime n:num =
(
	for i = 1 to n do
	(
		at time frame (
			pos = a*(i-1) + hor
			LineArray[i].pos.z = pos
		)
	)
)

--==============================================================================
--正向抛物面
--参数1 a - 比例系数
--参数2 hor  - 中心高
--==============================================================================
fn parabForwardPos a hor frame:FrameTime n:num =
(
	for i = 1 to n do
	(
		at time frame (
			x = n-i
			pos = a*x*x + hor
			LineArray[i].pos.z = pos
		)
	)
)

--==============================================================================
--反向抛物面
--参数1 a - 比例系数
--参数2 hor  - 中心高
--==============================================================================
fn parabBackwardPos a hor frame:FrameTime n:num =
(
	for i = 1 to n do
	(
		at time frame (
			x = i-1
			pos = a*x*x + hor
			LineArray[i].pos.z = pos
		)
	)
)

--==============================================================================
--正向正弦面
--参数1 amp - 波动幅度
--参数2 hor - 中心高
--==============================================================================
fn sinForwardPos amp hor frame:FrameTime n:num =
(
	for i = 1 to n do
	(
		at time frame (
			x = 90*(n-i+1)/n
			pos = amp*sin(x) + hor
			LineArray[i].pos.z = pos
		)
	)
)

--==============================================================================
--反向正弦面
--参数1 amp - 波动幅度
--参数2 hor - 中心高
--==============================================================================
fn sinBackwardPos amp hor frame:FrameTime n:num =
(
	for i = 1 to n do
	(
		at time frame (
			x = 90*i/n
			pos = amp*sin(x) + hor
			LineArray[i].pos.z = pos
		)
	)
)

--------------------------------------------------------------------------------
-----------------------------上下对称静态造型---------------------------------------
--------------------------------------------------------------------------------
--==============================================================================
--框阵按奇偶分组线性对称分布
--参数： amp - 对称锥形幅度，正数奇数在上，负数奇数在下
--参数： d   - 框间距
--参数： hor  - 中心高
--==============================================================================
fn linearSymAPos pos d hor frame:FrameTime n:num =
(
	for i = 1 to n-1 by 2 do
	(
		at time frame (
			x = (i+1)/2
			LineArray[i].pos.z = pos-d*(x-1) + hor
		)
	)
	
	for i = 2 to n by 2 do
	(
		at time frame (
			x = i/2
			LineArray[i].pos.z = -pos+d*(x-1) + hor
		)
	)
	
)

--==============================================================================
--框阵按奇偶分组线性对称分布
--参数： amp - 对称锥形幅度，正数奇数在上，负数奇数在下
--参数： d   - 框间距
--参数： hor  - 中心高
--==============================================================================
fn linearSymBPos pos d hor frame:FrameTime n:num =
(
	for i = 1 to n-1 by 2 do
	(
		at time frame (
			x = (n-i+1)/2
			LineArray[i].pos.z = pos-d*(x-1) + hor
		)
	)
	
	for i = 2 to n by 2 do
	(
		at time frame (
			x = (n-i)/2
			LineArray[i].pos.z = -pos+d*(x-1) + hor
		)
	)
	
)

--------------------------------------------------------------------------------
-----------------------------上下对称动态造型---------------------------------------
--------------------------------------------------------------------------------
fn loopLineSymAPos pos amp count dur hor frame:FrameTime n:num =
(
	for i = 1 to n-1 by 2 do
	(
		at time frame (
			x = (i+1)/2
			LineArray[i].pos.z = amp-d*(x-1) + hor
		)
	)
	
	for i = 2 to n by 2 do
	(
		at time frame (
			x = i/2
			LineArray[i].pos.z = -amp+d*(x-1) + hor
		)
	)
	
)

--------------------------------------------------------------------------------
----------------------------产生延时效果----------------------------------------
--------------------------------------------------------------------------------
--==============================================================================
--造型函数：逐个到达指定平面
--参数1：pos1   - 起始位置
--参数2：pos2   - 结束位置
--参数3：dur    - 单个环运行时间
--参数4：delay  - 延时时间 
--==============================================================================
fn horizLineDelayPos pos1 pos2 dur delay hold frame:FrameTime n:num =
(
	temp = frame
	for i = 1 to n do
	(
		at time temp LineArray[i].pos.z = pos1
		at time (temp+dur) LineArray[i].pos.z = pos2
		temp += delay

	)
	
	frame += hold + (n-1)*delay + dur
	for i = 1 to n do
	(
		at time frame LineArray[i].pos.z = pos2
	)

	return frame
)


--==============================================================================
--造型函数：延时效果的锥形
--参数1：pos1   - 起始位置
--参数2：pos2   - 结束位置
--参数3：dur    - 单个环运行时间
--参数4：delay  - 延时时间 
--==============================================================================
fn linearLineDelayPos pos1 pos2 dur delay hold frame:FrameTime n:num =
(

	h = pos2-pos1
	dh = h/(n-1)
	temp = frame
	for i = 1 to n do
	(

		at time temp 	LineArray[i].pos.z = pos1
		at time (temp+dur) LineArray[i].pos.z = pos2 - dh*(i-1)
		temp += delay
	)
	
	frame += hold + (n-1)*delay + dur
	for i = 1 to n do
	(
		at time frame LineArray[i].pos.z = pos2 - dh*(i-1)
	)

	return frame
)

--==============================================================================
--造型函数：延时效果的正弦波动
--参数1：amp    - 正弦振幅
--参数2：count  - 运行周期数
--参数3：dur    - 单个运行一个周期时间
--参数4：delay  - 延时时间
--参数5：hor    - 中心高
--==============================================================================
fn sinLineLoopDelayPos amp count dur delay hor frame:FrameTime n:num =
(
	enter = frame
	c = 8  --周期划分单位数
	dt = 360/c --周期划分一单位对应圆周度数
	df = dur/c --周期划分一单位对应时间
	
	for i = 1 to n do
	(
		temp = frame
		for t = 1 to (c*count+1) do
		(
			at time temp ( LineArray[i].pos.z = amp*sin(dt*(t-1)) + hor )
			temp += df	
		)
		frame += delay
	)

	return (enter + (n-1)*delay + count*dur)
)





--==================================================================================
--造型说明
--最大演示范围，1.6米
--距离地面最大高度，1.5米
--最长演示时间，5min
--==================================================================================

FrameTime = 0

animate on
(
	--==============================================================================
	--框阵起始零位，停止0.5秒
	--==============================================================================
	FrameTime += 15
	horizLinePos 0
	
	--==============================================================================
	--球阵随机分布0至-1600，耗时4秒
	--框阵至-800
	--==============================================================================
	FrameTime += 120
	horizLinePos -800
	randomSpherePos 0 -1600
	
	--==============================================================================
	--框阵至-800，停止0.5秒
	--==============================================================================
	FrameTime += 15
	horizLinePos -800
	
	--==============================================================================
	--框阵随机分布0至-1600，耗时2秒
	--==============================================================================
	FrameTime += 60
	randomLinePos 0 -1600      --randomLinePos rmin rmax
	
	--==============================================================================
	--框阵随机分布0至-1600，耗时2秒
	--==============================================================================
	FrameTime += 60
	randomLinePos 0 -1600      --randomLinePos rmin rmax
	
	--==============================================================================
	--框阵整体至-800，耗时2秒
	--==============================================================================
	FrameTime += 60
	horizLinePos -800
	
	--==============================================================================
	--框阵整体至-800，耗时2秒
	--==============================================================================
	FrameTime += 15
	horizLinePos -800
	
	--==============================================================================
	--逐个上升至-300，耗时12秒，并停止0.5秒
	--==============================================================================
	pos1 = -800
	pos2 = -300   --由零位上升至500
	dur = 60    --首个环动作时间
	delay = 30  --每个环等待上一环动作完毕开始动作
	hold = 15   --造型结束静止时间
	FrameTime = horizLineDelayPos pos1 pos2 dur delay hold --horizLineDelayPos pos1 pos2 dur delay hold
	
	--==============================================================================
	--框阵整体至-800，耗时2秒
	--==============================================================================
	--FrameTime += 15
	--horizLinePos -300
	
	--==============================================================================
	--逐个回到-800，耗时12秒
	--==============================================================================
	pos1 = -300
	pos2 = -800   --由500回到零位
	dur = 60    --每个环动作时间
	delay = 30  --每个环等待上一环动作完毕开始动作
	hold = 15   --造型结束静止时间
	FrameTime = horizLineDelayPos pos1 pos2 dur delay hold
	
	--==============================================================================
	--框阵整体至-800，耗时2秒
	--==============================================================================
	--FrameTime += 15
	--horizLinePos -800
	
	--==============================================================================
	--逐个回到-800，耗时12秒
	--==============================================================================
	FrameTime = linearLineDelayPos -800 -300 60 30 15 --linearLineDelayPos pos1 pos2 dur delay hold
	
	--==============================================================================
	--框阵整体至-300，耗时2秒
	--==============================================================================
	--FrameTime += 15
	--horizLinePos -300
	
	--==============================================================================
	--逐个回到-800，耗时12秒
	--==============================================================================
	FrameTime = linearLineDelayPos -300 -800 60 30 15 --linearLineDelayPos pos1 pos2 dur delay hold
	
	--==============================================================================
	--框阵整体至-800，耗时2秒
	--==============================================================================
	FrameTime += 60
	horizLinePos -800
	
	--==============================================================================
	--框阵启动正弦波动，1个周期，周期时长8秒
	--==============================================================================
	--FrameTime = sinLineLoopDelayPos 500 4 120 10 -800    --sinLineDelayPos amp count dur delay hor
	FrameTime = sinLineLoopDelayPos 500 1 240 10 -800
	
	--==============================================================================
	--框阵整体至-800，耗时2秒
	--==============================================================================
	FrameTime += 15
	horizLinePos -800
	
	--==============================================================================
	--框阵启动正弦波动，2个周期，周期时长8秒
	--==============================================================================
	FrameTime += 120
	linearSymAPos -800 50 -800          --linearSymAPos amp d hor
	
	--==============================================================================
	--框阵启动正弦波动，2个周期，周期时长8秒
	--==============================================================================
	FrameTime += 240
	linearSymAPos 800 50 -800           --linearSymBPos amp d hor
	
	--==============================================================================
	--框阵启动正弦波动，2个周期，周期时长8秒
	--==============================================================================
	FrameTime += 240
	linearSymBPos -800 50 -800          --linearSymAPos amp d hor
	
	--==============================================================================
	--框阵启动正弦波动，2个周期，周期时长8秒
	--==============================================================================
	FrameTime += 240
	linearSymBPos 800 50 -800           --linearSymBPos amp d hor
	
	--==============================================================================
	--框阵整体至-800，耗时2秒
	--==============================================================================
	FrameTime += 60
	horizLinePos -800
	
	
	FrameTime
	
)