--==============================================================================
--脚本意图：4x8球阵和框阵结合的造型设计
--版本 1.0
--日期 2015-2-13
--作者 吴飞林
--注意运行此脚本前，必须执行4x8球阵建模脚本
--==============================================================================

--==============================================================================
--为放样赋予变量名称
num = 4
LineArray = #($Loft001, $Loft002, $Loft003, $Loft004)

row = 2*row - 1
column = 2*column - 1

-------------------------------球阵造型函数-------------------------------------
--==============================================================================
--创建Z轴位置矩阵
--参数：pos    - 指定Z轴位置值
--参数：hold   - 保持时间
--==============================================================================
fn horizSpherePos pos hold frame:FrameTime row:row col:column =
(
	at time frame (
		for i = 1 to row by 2 do
		(
			for j = 1 to col by 2 do
			(
				BallArray[i][j].pos.z = pos
			)
		)
	)
	
	frame += hold
	at time frame (
		for i = 1 to row by 2 do
		(
			for j = 1 to col by 2 do
			(
				BallArray[i][j].pos.z = pos
			)
		)
	)
	return frame
)

--==============================================================================
--Z轴随机位置矩阵
--参数：rmin,rmax - 指定Z轴随机位置下限和上限
--==============================================================================
fn randomSpherePos rmin rmax frame:FrameTime row:row col:column =
(
	at time frame (
		for i = 1 to row by 2 do
		(
			for j = 1 to col by 2 do
			(
				BallArray[i][j].pos.z = random rmin rmax
			)
		)
	)
)

--==============================================================================
--球阵形成抛物面
--参数：a      - 系数（正开口向上，负开口向下）
--参数：h      - 弓高
--参数：cx,cy  - 中心点坐标
--参数：hor    - 中心高
--参数：hold   - 保持时间
--==============================================================================
fn paraboSpherePos a hor hold frame:FrameTime row:row col:column =
(
	cx = (row+1)/2
	cy = (col+1)/2
	rmax2 = cx*cx + cy*cy
	at time frame (
		for i = 1 to row by 2 do
		(
			for j = 1 to col by 2 do
			(
				ci = abs(cx - i) + 1
				cj = abs(cy - j) + 1
				r2 = ci*ci + cj*cj
				BallArray[i][j].pos.z = a*(r2 - rmax2) + hor
			)
		)
	)
	frame += hold
	at time frame (
		for i = 1 to row by 2 do
		(
			for j = 1 to col by 2 do
			(
				ci = abs(cx - i) + 1
				cj = abs(cy - j) + 1
				r2 = ci*ci + cj*cj
				BallArray[i][j].pos.z = a*(r2 - rmax2) + hor
			)
		)
	)
	
	return frame 
)


--==============================================================================
--球阵逐个延时启动正弦波动
--参数：amp    - 振幅
--参数：count  - 波形周期数
--参数：dur    - 周期帧长
--参数：delay  - 逐个延时时间
--参数：hor    - 中心高
--==============================================================================
fn sinSpherePos amp count dur delay hor frame:FrameTime row:row col:column =
(
	c = 8  --周期划分单位数
	dt = 360/c --周期划分一单位对应圆周度数
	df = dur/c --周期划分一单位对应时间
	for i = 1 to row by 2 do
	(
		for j = 1 to col by 2 do
		(
			frame += delay
			temp = frame
			for t = 1 to (c*count+1) do
			(
				
				at time temp ( BallArray[i][j].pos.z = amp*sin(dt*(t-1)) + hor )
				temp += df
			)
		)
	)

	return (frame + dur*count)
)

--==============================================================================
--球阵沿X轴逐列延时启动正弦波动
--参数：amp    - 振幅
--参数：count  - 波形周期数
--参数：dur    - 周期帧长
--参数：delay  - 逐列延时时间
--参数：hor    - 中心高
--==============================================================================
fn sinSphereXPos amp count dur delay hor frame:FrameTime row:row col:column =
(
	c = 8  --周期划分单位数
	dt = 360/c --周期划分一单位对应圆周度数
	df = dur/c --周期划分一单位对应时间

	for i = 1 to row by 2 do
	(
		frame += delay
		temp = frame
		for t = 1 to (c*count+1) do
		(
			at time temp 
			(
				for j = 1 to col by 2 do ( BallArray[i][j].pos.z = amp*sin(dt*(t-1)) + hor  )
			)
			temp += df
		)
	)

	return (frame + dur*count)
)

--==============================================================================
--球阵沿Y轴逐列延时启动正弦波动
--参数：amp    - 振幅
--参数：count  - 波形周期数
--参数：dur    - 周期帧长
--参数：delay  - 逐列延时时间
--参数：hor    - 中心高
--==============================================================================
fn sinSphereYPos amp count dur delay hor frame:FrameTime row:row col:column =
(
	c = 8  --周期划分单位数
	dt = 360/c --周期划分一单位对应圆周度数
	df = dur/c --周期划分一单位对应时间

	for j = 1 to col by 2 do
	(
		frame += delay
		temp = frame
		for t = 1 to (c*count+1) do
		(
			at time temp 
			(
				for i = 1 to row by 2 do ( BallArray[i][j].pos.z = amp*sin(dt*(t-1)) + hor  )
			)
			temp += df
		)
	)

	return (frame + dur*count)
)




-------------------------------框阵造型函数-------------------------------------
--==============================================================================
--同步达到指定位置
--参数：pos - 指定Z轴位置值
--参数：delay  - 保持pod位置时间
--==============================================================================
fn horizLinePos pos delay frame:FrameTime n:num =
(
	at time frame (
		for i = 1 to n do LineArray[i].pos.z = pos
	)
	frame += delay
	at time frame (
		for i = 1 to n do LineArray[i].pos.z = pos
	)
	return frame
)

--==============================================================================
--随机位置分布
--参数：rmin, rmax - 随机位置下限和上限
--==============================================================================
fn randomLinePos rmin rmax frame:FrameTime n:num =
(
	for i = 1 to n do
	(
		at time frame (
			pos = random rmin rmax
			LineArray[i].pos.z = pos
		)
	)
)

--==============================================================================
--框阵奇偶分离
--参数：pos - 指定Z轴位置值
--==============================================================================
fn horizLineDisPos pos1 pos2 hold frame:FrameTime n:num =
(
	for i = 1 to 3 by 2 do
	(
		at time frame (
			LineArray[i].pos.z = pos1
		)
	)
	
	for i = 2 to n by 2 do
	(
		at time frame (
			LineArray[i].pos.z = pos2
		)
	)
	
	frame += hold
	for i = 1 to 3 by 2 do
	(
		at time frame (
			LineArray[i].pos.z = pos1
		)
	)
	
	for i = 2 to n by 2 do
	(
		at time frame (
			LineArray[i].pos.z = pos2
		)
	)
	return frame
)



--------------------------------------------------------------------------------
----------------------------产生延时效果----------------------------------------
--------------------------------------------------------------------------------
--==============================================================================
--造型函数：逐个到达指定平面
--参数1：pos1   - 起始位置
--参数2：pos2   - 结束位置
--参数3：dur    - 单个环运行时间
--参数4：delay  - 延时时间 
--==============================================================================
fn horizDelayPos pos1 pos2 dur delay frame:FrameTime n:num =
(
	frame1 = frame
	frame2 = frame1 + dur
	temp = frame + dur
	for i = 1 to n do
	(

		at time frame1 LineArray[i].pos.z = pos1
		at time frame2 LineArray[i].pos.z = pos2
	
		frame1 += delay
		frame2 = frame1 + dur
	)
	frame += (n-1)*delay + dur
	return frame
)

--==============================================================================
--造型函数：延时效果的锥形
--参数1：pos1   - 起始位置
--参数2：pos2   - 结束位置
--参数3：dur    - 单个环运行时间
--参数4：delay  - 延时时间 
--==============================================================================
fn linearDelayPos pos1 pos2 dur delay frame:FrameTime n:num =
(
	frame1 = frame
	frame2 = frame1 + dur
	temp = frame + dur
	h = pos2-pos1
	dh = h/(n-1)
	for i = 1 to n do
	(

		at time frame1 LineArray[i].pos.z = pos1
		at time frame2 LineArray[i].pos.z = pos2 - dh*(i-1)
	
		frame1 += delay
		frame2 = frame1 + dur
	)
	frame += (n-1)*delay + dur
	return frame
)

--==============================================================================
--造型函数：延时效果的正弦波动
--参数1：amp    - 正弦振幅
--参数2：count  - 运行周期数
--参数3：dur    - 单个运行一个周期时间
--参数4：delay  - 延时时间
--参数5：hor    - 中心高
--==============================================================================
fn sinDelayPos amp count dur delay hor frame:FrameTime n:num =
(
	temp = frame
	c = 8  --周期划分单位数
	dt = 360/c --周期划分一单位对应圆周度数
	df = dur/c --周期划分一单位对应时间
	for i = 1 to n do
	(
		--frame = temp + i*delay
		for t = 1 to (c*count+1) do
		(
			frame += df	
			at time frame ( LineArray[i].pos.z = amp*sin(dt*(t-1)) + hor )
			--frame += df	
		)
		frame = temp + i*delay
	)
	temp += dur*count + n*delay
	return temp
)

--------------------------------------------------------------------------------
------------------------------动静结合造型--------------------------------------
--------------------------------------------------------------------------------
--==============================================================================
--动静配合之奇偶平动，7,8,9,10,11,12保持之前造型不变
--参数1：pos1  - 奇数环位置
--参数1：pos2  - 偶数环位置
--==============================================================================
fn demoPos pos1 pos2 frame:FrameTime n:num =
(
	for i = 1 to n-7 by 2 do   --1 3 5
	(
		at time frame ( LineArray[i].pos.z = pos1 )
	)
	for j = 2 to n-6 by 2 do   --2 4 6
	(
		at time frame ( LineArray[j].pos.z = pos2 )
	)
)

--==============================================================================
--动静配合之奇偶上下固定高度对称分布
--参数1：pos - 为正奇上偶下，为负偶上奇下
--==============================================================================
fn demo1Pos pos frame:FrameTime n:num =
(
	for i = 1 to n-7 by 2 do   --1 3 5
	(
		at time frame ( LineArray[i].pos.z = pos )
	)
	for j = 2 to n-6 by 2 do   --2 4 6
	(
		at time frame ( LineArray[j].pos.z = -pos )
	)
)

--==============================================================================
--动静配合之奇偶上下对称线性分布,开口向外
--参数1：a - 为正奇上偶下，为负偶上奇下
--参数2：hor - 中心高
--==============================================================================
fn demo2APos a hor frame:FrameTime n:num =
(
	for i = 1 to n-7 by 2 do   --1 3 5
	(
		at time frame ( LineArray[i].pos.z = a*((i+1)/2 - 1) + hor )
	)
	for j = 2 to n-6 by 2 do   --2 4 6
	(
		at time frame ( LineArray[j].pos.z = -a*(j/2 - 1) + hor )
	)
)

--==============================================================================
--动静配合之奇偶上下对称线性分布，开口向内
--参数1：a - 为正奇上偶下，为负偶上奇下
--参数2：hor - 中心高
--==============================================================================
fn demo2BPos a hor frame:FrameTime n:num =
(
	for i = 1 to n-7 by 2 do   --1 3 5
	(
		at time frame ( LineArray[i].pos.z = a*((n-i-8)/2 - 1) + hor )
	)
	for j = 2 to n-6 by 2 do   --2 4 6
	(
		at time frame ( LineArray[j].pos.z = -a*((n-j-6)/2 - 1) + hor )
	)
)

--==============================================================================
--动静配合之奇偶随机分离
--参数1：a1,a2  - 奇数环上下限
--参数2：b1,b2  - 偶数环上下限
--==============================================================================
fn demo3Pos a1 a2 b1 b2 frame:FrameTime n:num =
(
	for i = 1 to n-7 by 2 do   --1 3 5
	(
		at time frame ( LineArray[i].pos.z = random a1 a2 )
	)
	for j = 2 to n-6 by 2 do   --2 4 6
	(
		at time frame ( LineArray[j].pos.z = random b1 b2 )
	)
)

--==============================================================================
--动静配合之哑铃体
--12 10 8 6 4 2 1 3 5 7 9 11由下至上分布
--==============================================================================
fn demo4Pos a frame:FrameTime n:num =
(
	for i = 2 to n by 2 do   --2 4 6 8 10 12
	(
		at time frame ( LineArray[i].pos.z = a*(n-i)*(n-i)/4 )
	)
	for j = 1 to n-1 by 2 do   --1 3 5 7 9 11
	(
		d = a*(n-1)*(n-1)/4
		at time frame ( LineArray[j].pos.z = -a*(n-j)*(n-j)/4 + 2*d)
	)
	
)

--==============================================================================
--动静配合之纺锤体
-- 2 4 6 8 10 12 11 9 7 5 3 1由下至上分布
--==============================================================================
fn demo5Pos a frame:FrameTime n:num =
(
	for i = 2 to n by 2 do   --2 4 6 8 10 12
	(
		at time frame ( LineArray[i].pos.z = a*(i)*(i)/4 )
	)
	for j = 1 to n-1 by 2 do   --1 3 5 7 9 11
	(
		d = a*(n)*(n)/4
		at time frame ( LineArray[j].pos.z = -a*(j+1)*(j+1)/4 + 2*d)
	)
)


--==============================================================================
--动静配合之上下静止，中间正弦跳动
--参数1：pos    - 静止环（7,8,9,10,11,12）上下限
--参数2：amp    - 跳动振幅
--参数3：count  - 跳动次数
--参数4：dur    - 跳动周期
--参数5：delay  - 延时时间
--参数6：hor    - 中心高
--==============================================================================
fn demo6Pos pos amp count dur delay hor frame:FrameTime n:num =
(
	
	df = dur/4
	at time frame (
		for i = 7 to n-1 by 2 do (LineArray[i].pos.z = pos + hor)
		for i = 8 to n   by 2 do (LineArray[i].pos.z = -pos + hor)
	)

	frame += 30  --延时1秒启动正弦跳动
	c = 8  --周期划分单位数
	dt = 360/c --周期划分一单位对应圆周度数
	df = dur/c --周期划分一单位对应时间
	temp = frame
	for i = 1 to n-6 do
	(
		for t = 1 to (c*count+1) do
		(
			at time frame ( LineArray[i].pos.z = amp*sin(dt*(t-1)) + hor)
			frame += df	
		)
		frame = temp + i*delay
	)
	
	return frame
)



--==================================================================================
--造型说明
--最大演示范围，1.6米
--距离地面最大高度，1.5米
--最长演示时间，5min
--==================================================================================

FrameTime = 0
animate on
(
	
	--==============================================================================
	--起始球阵和框阵均为零位
	--==============================================================================
	FrameTime = horizSpherePos 0 0
	FrameTime = horizLinePos 0 0
	
	--==============================================================================
	--球阵下降随机分布于0至-1600，耗时4秒
	--框阵为零位
	--==============================================================================
	FrameTime += 120
	randomSpherePos 0 -1200
	horizLinePos 0 0
	
	--==============================================================================
	--球阵下降随机分布于0至-1600，耗时2秒
	--框阵为零位
	--==============================================================================
	FrameTime += 90
	randomSpherePos 0 -1600
	horizLinePos 0 0

	--==============================================================================
	--球阵下降随机分布于-600至-1000，耗时2秒
	--框阵为零位
	--==============================================================================
	FrameTime += 60
	randomSpherePos -600 -1000
	horizLinePos 0 0
	
	--==============================================================================
	--球阵下降随机分布于-600至-1000，耗时2秒
	--框阵为零位
	--==============================================================================
	FrameTime += 60
	randomSpherePos -600 -1000
	horizLinePos 0 0
	
	--==============================================================================
	--球阵下降随机分布于-500至-800，耗时1秒
	--框阵为零位
	--==============================================================================
	FrameTime += 60
	randomSpherePos -500 -800
	horizLinePos 0 0
	
	--==============================================================================
	--球阵下降随机分布于-500至-800，耗时1秒
	--框阵为零位
	--==============================================================================
	FrameTime += 30
	randomSpherePos -500 -800
	horizLinePos 0 0
	
	--==============================================================================
	--球阵下降随机分布于-500至-800，耗时1秒
	--框阵为零位
	--==============================================================================
	FrameTime += 30
	randomSpherePos -500 -800
	horizLinePos 0 0
	
	--==============================================================================
	--球阵到达-800，并停留0.5秒
	--框阵为零位
	--==============================================================================
	FrameTime += 30
	FrameTime = horizSpherePos -800 15
	horizLinePos 0 0
	
	--==============================================================================
	--球阵停在-800
	--框阵下降至-1000，耗时4秒
	--时间1秒
	--==============================================================================
	FrameTime += 120
	FrameTime = horizSpherePos -800 0
	horizLinePos -1600 0
	
	--==============================================================================
	--球阵上升至-100，耗时2秒，并逗留0.5秒
	--框阵停止在-1600
	--==============================================================================
	FrameTime += 60
	FrameTime = horizSpherePos -100 15
	
	--==============================================================================
	--球阵随机分布在-100至-1600，耗时4秒
	--框阵停止在-1000
	--==============================================================================
	FrameTime += 120
	randomSpherePos -100 -1600

	
	--==============================================================================
	--球阵随机分布在-300至-1000，耗时2秒
	--框阵停止在-1000
	--时间1秒
	--==============================================================================
	FrameTime += 60
	randomSpherePos -300 -1000
	
	--==============================================================================
	--球阵随机分布在-500至-800，耗时秒
	--框阵停止在-1000
	--时间1秒
	--==============================================================================
	FrameTime += 30
	randomSpherePos -500 -800
	
	--==============================================================================
	--球阵随机分布在-500至-800，耗时秒
	--框阵停止在-1000
	--时间1秒
	--==============================================================================
	FrameTime += 30
	randomSpherePos -500 -800
	
	--==============================================================================
	--球阵随机分布在-500至-800，耗时秒
	--框阵停止在-1000
	--时间1秒
	--==============================================================================
	FrameTime += 30
	randomSpherePos -500 -800
	
	--==============================================================================
	--球阵随机分布在-500至-800，耗时秒
	--框阵停止在-1600
	--时间1秒
	--==============================================================================
	FrameTime += 30
	randomSpherePos -500 -800
	horizLinePos -1600 0
	
	--==============================================================================
	--球阵与框阵到达-800，耗时2秒
	--==============================================================================
	FrameTime += 60
	horizSpherePos -800 0
	horizLinePos -800 0
	
	--==============================================================================
	--球阵与框阵到达-800，耗时2秒
	--==============================================================================
	FrameTime += 15
	horizSpherePos -800 0
	horizLinePos -800 0

	--==============================================================================
	--球阵启动开口向下抛物面造型，同时框阵奇下偶上分离，并停留0.5秒，耗时3.5秒
	--时间1秒
	--==============================================================================
	FrameTime += 80
	paraboSpherePos 5 -800 15                   --paraboSpherePos a hor delay
	FrameTime = horizLineDisPos -1600 0 15      --horizLineDisPos pos1 pos2 hold
	
	--==============================================================================
	--球阵启动开口向下抛物面造型，同时框阵奇上偶下分离，并停留0.5秒，耗时3.5秒
	--时间1秒
	--==============================================================================
	FrameTime += 160
	paraboSpherePos -5 -800 15                  --paraboSpherePos a hor delay
	FrameTime = horizLineDisPos 0 -1600 15      --horizLineDisPos pos1 pos2 hold
	
	--==============================================================================
	--球阵框阵均回到-800，并停留0.5秒，耗时2.5秒
	--==============================================================================
	FrameTime += 80
	horizSpherePos -800 15
	FrameTime = horizLinePos -800 15

	--==============================================================================
	--球阵停在-800，框阵奇上偶下分离，耗时4秒
	--==============================================================================
	FrameTime += 120
	horizSpherePos -800 0
	horizLineDisPos 0 -1600 0                      --horizLineDisPos pos1 pos2 hold
	
	--==============================================================================
	--球阵启动逐个延时正弦波动，单个球运行2周期，耗时8秒
	--框阵保持停止之前奇上偶下分离造型
	--==============================================================================
	FrameTime = sinSpherePos 200 2 120 5 -800      --sinSpherePos amp count dur delay hor
	FrameTime = horizLineDisPos 0 -1600  0                   --horizLineDisPos pos1 pos2
	
	--==============================================================================
	--球阵沿X轴启动延时正弦波动运行5周期，耗时20秒，同时框阵全部回到-500
	--周期参数dur越大波形周期跨度越大
	--延时参数delay越大波形显得越僵硬
	--==============================================================================
	FrameTime = sinSphereXPos 200 5 90 10 -800   --sinSpherePos amp count dur delay hor                  
	
	
	--==============================================================================
	--球阵和框阵均到达-800，耗时0.5秒
	--==============================================================================
	FrameTime = horizSpherePos -800 15
	horizLinePos -800 0
	
	
	--==============================================================================
	--球阵随机分布变于0至-1600
	--框阵奇上偶下分离
	--耗时4秒
	--==============================================================================
	FrameTime += 120
	randomSpherePos 0 -1600
	horizLineDisPos 0 -1600 0          --horizLineDisPos pos1 pos2 hold
	
	--==============================================================================
	--球阵随机分布变于0至-1600
	--框阵奇上偶下分离
	--耗时4秒
	--==============================================================================
	FrameTime += 60
	randomSpherePos 0 -1600
	horizLineDisPos 0 -1600 0          --horizLineDisPos pos1 pos2 hold
	
	--==============================================================================
	--球阵和框阵均到达-500，耗时2秒
	--==============================================================================
	FrameTime += 60
	horizSpherePos -800 0
	horizLinePos -800 0
	
	--==============================================================================
	--球阵随机分布变于0至-1600
	--框阵奇上偶下分离
	--耗时4秒
	--==============================================================================
	FrameTime += 60
	randomSpherePos 0 -1600
	horizLineDisPos -1600 0 0          --horizLineDisPos pos1 pos2 hold
	
	--==============================================================================
	--球阵随机分布变于-1000至0
	--框阵保持奇下偶上分离造型
	--耗时2秒
	--==============================================================================
	FrameTime += 60
	randomSpherePos -1600 0
	horizLineDisPos -1600 0 0          --horizLineDisPos pos1 pos2 hold
	
	--==============================================================================
	--起始球阵和框阵均回到零位
	--耗时3秒
	--==============================================================================
	FrameTime += 90
	horizSpherePos 0 0
	horizLinePos 0 0

	
	
)
FrameTime