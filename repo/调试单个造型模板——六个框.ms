--重置场景
--resetMaxFile #noprompt

num = 6
--rot_arr = eulerangles 15 -15 0

--创建球阵
LineArray = #()
for i = 1 to num do
(
	LineArray[i] = torus segs:48 radius1:(25 + 5*i) radius2:1.5 position:[0,0,0] wirecolor: [255, 255, 0]
	--rotate LineArray[i] rot_arr
)

--==============================================================================
--创建Z轴位置矩阵
--参数：pos - 指定Z轴位置值
--==============================================================================
fn horizPos pos frame:FrameTime n:num =
(
	for i = 1 to n do
	(
		at time frame (
			LineArray[i].pos.z = pos
		)
	)
)

--==============================================================================
--随机位置
--参数：rmin, rmax - 随机位置下限和上限
--==============================================================================
fn randomPos rmin rmax frame:FrameTime n:num =
(
	for i = 1 to n do
	(
		at time frame (
			pos = random rmin rmax
			LineArray[i].pos.z = pos
		)
	)
)

--==============================================================================
--正向线性
--参数：a,b - 斜率和中心高
--==============================================================================
fn linearForwardPos a b frame:FrameTime n:num =
(
	for i = 1 to n do
	(
		at time frame (
			pos = a*(i-1) + b
			LineArray[i].pos.z = pos
		)
	)
)

--==============================================================================
--反向线性
--参数：a,b - 斜率和中心高
--==============================================================================
fn linearBackwardPos a b frame:FrameTime n:num =
(
	for i = 1 to n do
	(
		at time frame (
			pos = a*(n-i) + b
			LineArray[i].pos.z = pos
		)
	)
)

--==============================================================================
--正向抛物面
--参数：a,b - 抛物面系数和中心高
--==============================================================================
fn parabForwardPos a b frame:FrameTime n:num =
(
	for i = 1 to n do
	(
		at time frame (
			pos = a*(i-1)*(i-1) + b
			LineArray[i].pos.z = pos
		)
	)
)

--==============================================================================
--反向抛物面
--参数：a,b - 抛物面系数和中心高
--==============================================================================
fn parabBackwardPos a b frame:FrameTime n:num =
(
	for i = 1 to n do
	(
		at time frame (
			pos = a*(n-i)*(n-i) + b
			LineArray[i].pos.z = pos
		)
	)
)

--==============================================================================
--正向正弦面
--参数1 amp - 上下波动幅度
--参数2 d1  - 框阵分布范围，值越大分布越分散
--参数3 d2 - 上下波动速率
--参数4 hor - 上下波动的中心高
--参数5 frame - 关键帧
--==============================================================================
fn sinForwardPos amp d1 d2 hor frame:FrameTime n:num =
(
	for i = 1 to n do
	(
		at time frame (
			pos = amp*sin(d1*(i-1) + d2) + hor
			LineArray[i].pos.z = pos
		)
	)
)

--==============================================================================
--反向正弦面
--参数1 amp - 上下波动幅度
--参数2 d1  - 框阵分布范围，值越大分布越分散
--参数3 d2 - 上下波动速率
--参数4 hor - 上下波动的中心高
--参数5 frame - 关键帧
--==============================================================================
fn sinBackwardPos amp d1 d2 hor frame:FrameTime n:num =
(
	for i = 1 to n do
	(
		at time frame (
			pos = amp*sin(d1*(n-i) + d2) + hor
			LineArray[i].pos.z = pos
		)
	)
)

fn demoPos amp d1 d2 hor frame:FrameTime n:num =
(
	for i = 1 to n do
	(
		at time frame (
			x = sin(d1*(n-i) + d2)
			y = cos(d1*(n-i) + d2)
			pos = amp*(x*y) + hor
			LineArray[i].pos.z = pos
		)
	)
)

--==============================================================================
--线性沙漏型
--==============================================================================
fn linSandPos a b frame:FrameTime n:num =
(
	for i = 1 to n by 2 do
	(
		at time frame (
			pos = a*(i-1)
			LineArray[i].pos.z = pos
		)
	)
	
	for i = 2 to n by 2 do
	(
		at time frame (
			pos = b*(i-1)
			LineArray[i].pos.z = pos
		)
	)
	
)

--==============================================================================
--线性贝壳型
--==============================================================================
fn linShellPos a b frame:FrameTime n:num =
(
	for i = 1 to n by 2 do
	(
		at time frame (
			pos = a*(n-i)
			LineArray[i].pos.z = pos
		)
	)
	
	for i = 2 to n by 2 do
	(
		at time frame (
			pos = b*(n-i)
			LineArray[i].pos.z = pos
		)
	)
	
)

--==============================================================================
--抛物线沙漏型
--==============================================================================
fn parabSandPos a b frame:FrameTime n:num =
(
	for i = 1 to n by 2 do
	(
		at time frame (
			pos = a*(i-1)*(i-1)
			LineArray[i].pos.z = pos
		)
	)
	
	for i = 2 to n by 2 do
	(
		at time frame (
			pos = b*(i-1)*(i-1)
			LineArray[i].pos.z = pos
		)
	)
	
)


--==============================================================================
--抛物线贝壳型
--==============================================================================
fn parabShellPos a b frame:FrameTime n:num =
(
	for i = 1 to n by 2 do
	(
		at time frame (
			pos = a*(n-i)*(n-i)
			LineArray[i].pos.z = pos
		)
	)
	
	for i = 2 to n by 2 do
	(
		at time frame (
			pos = b*(n-i)*(n-i)
			LineArray[i].pos.z = pos
		)
	)
	
)

--==============================================================================
--正弦沙漏型
--==============================================================================
fn sinSandPos a b d frame:FrameTime n:num =
(
	for i = 1 to n by 2 do
	(
		at time frame (
			pos = a*sin(d*((i+1)/2-1)/4)
			LineArray[i].pos.z = pos
		)
	)
	
	for i = 2 to n by 2 do
	(
		at time frame (
			pos = b*sin(d*(i/2)/4)
			LineArray[i].pos.z = pos
		)
	)
	
)

--==============================================================================
--正弦线贝壳型
--==============================================================================
fn sinShellPos a b d frame:FrameTime n:num =
(
	for i = 1 to n by 2 do
	(
		at time frame (
			pos = a*sin(d*((n-i+1)/2-1)/4)
			LineArray[i].pos.z = pos
		)
	)
	
	for i = 2 to n by 2 do
	(
		at time frame (
			pos = b*sin(d*((n-i)/2)/4)
			LineArray[i].pos.z = pos
		)
	)
	
)

--==============================================================================
--梯度正弦
--==============================================================================
fn gradSinPos amp d t hor frame:FrameTime n:num =
(
	for i = 1 to n do
	(
		at time (frame + d*(i-1)) (
			pos = amp*sin(t) + hor
			LineArray[i].pos.z = pos
		)
	)
)


FrameTime = 0
animate on
(
	
	--==============================================================================
	--起点零位
	horizPos 0  --传入位置0参数

	--==============================================================================
	--==============================================================================
	--线性沙漏型
	FrameTime += 200
    linSandPos 5 -5
	
	--==============================================================================
	--线性贝壳型
	FrameTime += 200
    linShellPos 5 -5
	
	--==============================================================================
	--线性沙漏型
	FrameTime += 200
    linSandPos -5 5
	
	--==============================================================================
	--线性贝壳型
	FrameTime += 200
    linShellPos -5 5

	--==============================================================================
	--==============================================================================
	--抛物面沙漏型
	FrameTime += 200
    parabSandPos 1 -1
	
	--==============================================================================
	--抛物面贝壳型
	FrameTime += 200
    parabShellPos 1 -1
	
	--==============================================================================
	--抛物面沙漏型
	FrameTime += 200
    parabSandPos -1 1
	
	--==============================================================================
	--抛物面贝壳型
	FrameTime += 200
    parabShellPos -1 1
	
	--==============================================================================
	--==============================================================================
	--正弦沙漏型
	FrameTime += 200
    sinSandPos 60 -60 90
	
	--==============================================================================
	--正弦贝壳型
	FrameTime += 200
    sinShellPos 60 -60 90
	
	--==============================================================================
	--正弦贝壳型
	FrameTime += 200
    sinShellPos -60 60 90

	--==============================================================================
	--回到零位
	FrameTime += 200
	horizPos 0  --传入位置0参数
	
	--==============================================================================
	--正向线性爬升
	FrameTime += 200
	linearForwardPos 5 0
	
	--==============================================================================
	--正向抛物面爬升
	FrameTime += 200
	parabForwardPos 1 0
	
	--==============================================================================
	--正向抛物面爬升
	FrameTime += 200
	sinForwardPos 60 10 0 0   --传入振幅、周期、偏移和中心高四个参数
	
	--==============================================================================
	--回到零位
	FrameTime += 200
	horizPos 0  --传入位置0参数
	
	--==============================================================================
	--反向线性爬升
	FrameTime += 200
	linearBackwardPos 5 0
	
	--==============================================================================
	--反向抛物面爬升
	FrameTime += 200
	parabBackwardPos 1 0
	
	--==============================================================================
	--反向抛物面爬升
	FrameTime += 200
	sinBackwardPos 60 10 0 0   --传入振幅、周期、偏移和中心高四个参数
	
	--==============================================================================
	--回到零位
	FrameTime += 200
	horizPos 0  --传入位置0参数
	
	--==============================================================================
	--正弦上下波动1
	--周期800f
	for t = 1 to 50 do
	(
		FrameTime += 20
		amp = 30
		d = 20
		time = 20*(t-1)
		hor = 60
		gradSinPos amp d time hor
	)
	
	--==============================================================================
	--回到零位
	FrameTime += 200
	horizPos 0  --传入位置0参数
	
	FrameTime
	
)